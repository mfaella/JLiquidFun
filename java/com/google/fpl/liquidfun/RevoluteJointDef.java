/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class RevoluteJointDef extends JointDef {
  private transient long swigCPtr;

  protected RevoluteJointDef(long cPtr, boolean cMemoryOwn) {
    super(liquidfunJNI.RevoluteJointDef_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RevoluteJointDef obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_RevoluteJointDef(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setLocalAnchorA(float x, float y) {
    liquidfunJNI.RevoluteJointDef_setLocalAnchorA(swigCPtr, this, x, y);
  }

  public void setLocalAnchorB(float x, float y) {
    liquidfunJNI.RevoluteJointDef_setLocalAnchorB(swigCPtr, this, x, y);
  }

  public void setReferenceAngle(float value) {
    liquidfunJNI.RevoluteJointDef_referenceAngle_set(swigCPtr, this, value);
  }

  public float getReferenceAngle() {
    return liquidfunJNI.RevoluteJointDef_referenceAngle_get(swigCPtr, this);
  }

  public void setEnableLimit(boolean value) {
    liquidfunJNI.RevoluteJointDef_enableLimit_set(swigCPtr, this, value);
  }

  public boolean getEnableLimit() {
    return liquidfunJNI.RevoluteJointDef_enableLimit_get(swigCPtr, this);
  }

  public void setLowerAngle(float value) {
    liquidfunJNI.RevoluteJointDef_lowerAngle_set(swigCPtr, this, value);
  }

  public float getLowerAngle() {
    return liquidfunJNI.RevoluteJointDef_lowerAngle_get(swigCPtr, this);
  }

  public void setUpperAngle(float value) {
    liquidfunJNI.RevoluteJointDef_upperAngle_set(swigCPtr, this, value);
  }

  public float getUpperAngle() {
    return liquidfunJNI.RevoluteJointDef_upperAngle_get(swigCPtr, this);
  }

  public void setEnableMotor(boolean value) {
    liquidfunJNI.RevoluteJointDef_enableMotor_set(swigCPtr, this, value);
  }

  public boolean getEnableMotor() {
    return liquidfunJNI.RevoluteJointDef_enableMotor_get(swigCPtr, this);
  }

  public void setMotorSpeed(float value) {
    liquidfunJNI.RevoluteJointDef_motorSpeed_set(swigCPtr, this, value);
  }

  public float getMotorSpeed() {
    return liquidfunJNI.RevoluteJointDef_motorSpeed_get(swigCPtr, this);
  }

  public void setMaxMotorTorque(float value) {
    liquidfunJNI.RevoluteJointDef_maxMotorTorque_set(swigCPtr, this, value);
  }

  public float getMaxMotorTorque() {
    return liquidfunJNI.RevoluteJointDef_maxMotorTorque_get(swigCPtr, this);
  }

  public RevoluteJointDef() {
    this(liquidfunJNI.new_RevoluteJointDef(), true);
  }

}
