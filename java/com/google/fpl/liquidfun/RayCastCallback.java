/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class RayCastCallback {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RayCastCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RayCastCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_RayCastCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    liquidfunJNI.RayCastCallback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    liquidfunJNI.RayCastCallback_change_ownership(this, swigCPtr, true);
  }

  public RayCastCallback() {
    this(liquidfunJNI.new_RayCastCallback(), true);
    liquidfunJNI.RayCastCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public float reportFixture(Fixture fixture, Vec2 point, Vec2 normal, float fraction) {
    return liquidfunJNI.RayCastCallback_reportFixture(swigCPtr, this, Fixture.getCPtr(fixture), fixture, Vec2.getCPtr(point), point, Vec2.getCPtr(normal), normal, fraction);
  }

  public float reportParticle(ParticleSystem particleSystem, int index, Vec2 point, Vec2 normal, float fraction) {
    return (getClass() == RayCastCallback.class) ? liquidfunJNI.RayCastCallback_reportParticle(swigCPtr, this, ParticleSystem.getCPtr(particleSystem), particleSystem, index, Vec2.getCPtr(point), point, Vec2.getCPtr(normal), normal, fraction) : liquidfunJNI.RayCastCallback_reportParticleSwigExplicitRayCastCallback(swigCPtr, this, ParticleSystem.getCPtr(particleSystem), particleSystem, index, Vec2.getCPtr(point), point, Vec2.getCPtr(normal), normal, fraction);
  }

}
